（电信1808班，蒙志弘，U201813469）完成日期：2019.03.25
一，程序设计目的：实现约瑟夫环的报数功能，
问题详情：七个人按顺时针围成一个圆环，每个人持有一个密码（正整数），开始时任意选一个报数上限m，从第一个人开始报数，报到m是停止，报m的人出列，并以他的密码作为新的报数上限，重新开始报数，直到所有人出列。打印出列顺序。
1.采用scanf函数输入每个人的编号以及密码。用printf函数输出出列顺序。
2.程序要实现构成一个单循环链表，并实现约瑟夫环，打印出出列顺序。
3.例如开始有7个人编号1~7，报数上限m=6，七个人的密码依次是：3.1.7.2.4.8.4，程序运行后输出为：6.1.4.7.2.3.5。

二，程序包括了下面这些函数，
linklist joseph(int n)   （构建一个单循环链表，linklist是结构体类型的指针，n为人数）
void Output(linklist L,int m,int n)   （实现约瑟夫环的输出，L为输入的单循环链表，m为报数上限，n是人数）
int main（）负责输入人数以及初始的报数上限。
三，详细描述
typedef struct Node（生成结构体）
{      序号
       密码
       指针域
}
joseph函数
{    int i;
     linklist p,q;
     p=q=(linklist)malloc(sizeof(List));
     for(i=2;i<n;i++)
     {  linklist t;
        t=(linklist)malloc(sizeof(List));
        链表延长;
        q->next=t;
        q=t;
     }
     将尾节点的指针域指向第一个节点;
     return q;
}
output函数
{    int i;
    linklist p;
    while(n>0)
    {
        for(i=1;i<m;i++)
            L=L->next;
        p=L->next;
        输出出列的人的号码以及密码；
        m=p->password;
        free(p);
        n--;
    }
int main()
{   int n,m;
    linklist L;
    输入人数以及初始报数上限；
    L=joseph(n);
    output(L,m,n);
    return 0;
}
四，调试过程
1.单循环链表构成失败，之后采用两个结构体指针分别指向头和尾，再用一个新的指针来形成节点，最后将尾节点的指针域指向头指针。
2.Scanf函数输入数值失败，之后的调试中发现漏掉了“&”，导致输入的数据没有储存空间。
3.程序的时间复杂度为O（nm）（或O(n*n),关键判断n>m）。
4.经验体会：数值的输入不应该用scanf函数，麻烦且容易出错。
五，使用说明
首先输入总人数，然后输入初始的报数上限，然后按1~7的编号依次输入密码（输入一个密码，然后按回车，再输入下一个）。
六，测试结果
第一次检测：输入人数：7，初始上限：6，密码依次是：3.1.7.2.4.8.4，输出结果：6.1.4.7.2.3.5
第二次检测：输入人数：7，初始上限：20，密码依次是：3.1.7.2.4.8.4，输出结果：6.1.4.7.2.3.5
第三次检测：输入人数：5，初始上限：5，密码依次是：4.7.2.5.2，输出结果：5.1.2.3.4.
